{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreyoshi\\\\myproj\\\\frontend\\\\src\\\\components\\\\manageAddress.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { FaMapMarkerAlt, FaHome, FaBuilding, FaUsers } from 'react-icons/fa'; // Address type and location icons\n// import { GoogleMap, LoadScript, Autocomplete, Marker } from '@react-google-maps/api'; // Import Google Maps components\n// import { FaLocationCrosshairs } from \"react-icons/fa6\";\n// import '../styles/manageAddress.css';\n\n// const ManageAddresses = () => {\n//   const [addresses, setAddresses] = useState([\n//     { id: 1, type: 'Home', address: '123 Home St, Cityville', icon: <FaHome color=\"black\" /> },\n//     { id: 2, type: 'Office', address: '456 Work Rd, Metropolis', icon: <FaBuilding color=\"black\" /> },\n//     { id: 3, type: 'Friends & Family', address: '789 Friend Ave, Townsville', icon: <FaUsers color=\"black\" /> },\n//   ]);\n\n//   const [recentSearches, setRecentSearches] = useState([\n//     { id: 1, type: 'Search 1', address: 'Some Location, City' },\n//     { id: 2, type: 'Search 2', address: 'Another Location, Metropolis' },\n//     { id: 3, type: 'Search 3', address: 'Yet Another Location, Townsville' },\n//   ]);\n\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedAddress, setSelectedAddress] = useState('');\n//   const [manualSearchMode, setManualSearchMode] = useState(false);\n\n//   const handleDelete = (id) => {\n//     setAddresses(addresses.filter((address) => address.id !== id));\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleSearchManually = () => {\n//     setManualSearchMode(true); // Activate manual search mode\n//   };\n\n//   const handlePlaceSelect = (autocomplete) => {\n//     const place = autocomplete.getPlace();\n//     if (place && place.formatted_address) {\n//       setSelectedAddress(place.formatted_address);\n//       setManualSearchMode(false); // Close manual search after address is selected\n//     }\n//   };\n\n//   return (\n//     <div className=\"manage-addresses\">\n//       {/* Search Bar Section */}\n//       <div className=\"search-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search your area / pincode / apartment\"\n//           value={searchTerm}\n//           onChange={handleSearch}\n//         />\n//       </div>\n\n//       {/* Current Location and Enable Button */}\n//       <div className=\"location-section\">\n//         <div className=\"location-info\">\n//           <FaLocationCrosshairs color=\"red\" />\n//           <span className=\"current-location\">Current Location</span>\n//         </div>\n//         <button className=\"enable-btn\">Enable</button>\n//         <div className=\"underline\"></div>\n//       </div>\n\n//       {/* Manual Search Section */}\n//       {manualSearchMode && (\n//         <div className=\"manual-search\">\n//           <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\n//             <GoogleMap\n//               mapContainerStyle={{ width: '100%', height: '400px' }}\n//               zoom={12}\n//               center={{ lat: 0, lng: 0 }} // Optional: Center the map\n//             >\n//               <Autocomplete\n//                 onLoad={(autocomplete) => console.log('Autocomplete loaded')}\n//                 onPlaceChanged={(e) => handlePlaceSelect(e)}\n//               >\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter address\"\n//                   style={{\n//                     width: '100%',\n//                     padding: '10px',\n//                     fontSize: '16px',\n//                     borderRadius: '5px',\n//                     border: '1px solid #ccc',\n//                   }}\n//                 />\n//               </Autocomplete>\n//             </GoogleMap>\n//           </LoadScript>\n//         </div>\n//       )}\n\n//       {/* Saved Location Section */}\n//       <div className=\"saved-location\">\n//         <h3>Saved Location</h3>\n//         <ul>\n//           {addresses.map((address) => (\n//             <li key={address.id} className=\"address-item\">\n//               <div className=\"address-info\">\n//                 <div className=\"address-type\">\n//                   {address.icon}\n//                   <strong>{address.type}</strong>\n//                 </div>\n//                 <p className=\"address-text\">{address.address}</p>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//         <div className=\"underline\"></div>\n//       </div>\n\n//       {/* Recent Searches Section */}\n//       <div className=\"recent-searches\">\n//         <h3>Recent Searches</h3>\n//         <ul>\n//           {recentSearches.map((search) => (\n//             <li key={search.id} className=\"address-item\">\n//               <div className=\"address-info\">\n//                 <div className=\"address-type\">\n//                   <FaMapMarkerAlt color=\"red\" />\n//                   <strong>{search.type}</strong>\n//                 </div>\n//                 <p className=\"address-text\">{search.address}</p>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//         <div className=\"underline\"></div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ManageAddresses;\nimport React, { useState } from 'react';\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport { FaHome, FaBuilding, FaUsers } from 'react-icons/fa';\nimport { FaLocationCrosshairs } from 'react-icons/fa6';\nimport '../styles/manageAddress.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageAddresses = () => {\n  _s();\n  const [mapCenter, setMapCenter] = useState({\n    lat: 37.7749,\n    lng: -122.4194\n  }); // Default to San Francisco\n  const [markerPosition, setMarkerPosition] = useState({\n    lat: 37.7749,\n    lng: -122.4194\n  });\n  const [addresses, setAddresses] = useState([{\n    id: 1,\n    type: 'Home',\n    address: '123 Home St, Cityville',\n    icon: /*#__PURE__*/_jsxDEV(FaHome, {\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 69\n    }, this)\n  }, {\n    id: 2,\n    type: 'Office',\n    address: '456 Work Rd, Metropolis',\n    icon: /*#__PURE__*/_jsxDEV(FaBuilding, {\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 72\n    }, this)\n  }, {\n    id: 3,\n    type: 'Friends & Family',\n    address: '789 Friend Ave, Townsville',\n    icon: /*#__PURE__*/_jsxDEV(FaUsers, {\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 85\n    }, this)\n  }]);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: 'YOUR_API_KEY' // Replace with your API key\n  });\n  const handleEnableLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setMapCenter({\n          lat: latitude,\n          lng: longitude\n        });\n        setMarkerPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, error => {\n        console.error('Error fetching location:', error);\n        alert('Failed to fetch location. Please enable location services.');\n      });\n    } else {\n      alert('Geolocation is not supported by your browser.');\n    }\n  };\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading Map...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-addresses\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search your area / pincode / apartment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-info\",\n        children: [/*#__PURE__*/_jsxDEV(FaLocationCrosshairs, {\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"current-location\",\n          children: \"Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"enable-btn\",\n        onClick: handleEnableLocation,\n        children: \"Enable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: mapCenter,\n        zoom: 15,\n        mapContainerStyle: {\n          width: '100%',\n          height: '400px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: markerPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addresses.map(address => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"address-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"address-type\",\n              children: [address.icon, /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: address.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address-text\",\n              children: address.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, address.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageAddresses, \"A9jOExLswbumVPyOc7jqLDOQSTo=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = ManageAddresses;\nexport default ManageAddresses;\nvar _c;\n$RefreshReg$(_c, \"ManageAddresses\");","map":{"version":3,"names":["React","useState","GoogleMap","Marker","useJsApiLoader","FaHome","FaBuilding","FaUsers","FaLocationCrosshairs","jsxDEV","_jsxDEV","ManageAddresses","_s","mapCenter","setMapCenter","lat","lng","markerPosition","setMarkerPosition","addresses","setAddresses","id","type","address","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","isLoaded","googleMapsApiKey","handleEnableLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","error","console","alert","children","className","placeholder","onClick","center","zoom","mapContainerStyle","width","height","map","_c","$RefreshReg$"],"sources":["C:/Users/sreyoshi/myproj/frontend/src/components/manageAddress.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { FaMapMarkerAlt, FaHome, FaBuilding, FaUsers } from 'react-icons/fa'; // Address type and location icons\r\n// import { GoogleMap, LoadScript, Autocomplete, Marker } from '@react-google-maps/api'; // Import Google Maps components\r\n// import { FaLocationCrosshairs } from \"react-icons/fa6\";\r\n// import '../styles/manageAddress.css';\r\n\r\n// const ManageAddresses = () => {\r\n//   const [addresses, setAddresses] = useState([\r\n//     { id: 1, type: 'Home', address: '123 Home St, Cityville', icon: <FaHome color=\"black\" /> },\r\n//     { id: 2, type: 'Office', address: '456 Work Rd, Metropolis', icon: <FaBuilding color=\"black\" /> },\r\n//     { id: 3, type: 'Friends & Family', address: '789 Friend Ave, Townsville', icon: <FaUsers color=\"black\" /> },\r\n//   ]);\r\n\r\n//   const [recentSearches, setRecentSearches] = useState([\r\n//     { id: 1, type: 'Search 1', address: 'Some Location, City' },\r\n//     { id: 2, type: 'Search 2', address: 'Another Location, Metropolis' },\r\n//     { id: 3, type: 'Search 3', address: 'Yet Another Location, Townsville' },\r\n//   ]);\r\n\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [selectedAddress, setSelectedAddress] = useState('');\r\n//   const [manualSearchMode, setManualSearchMode] = useState(false);\r\n\r\n//   const handleDelete = (id) => {\r\n//     setAddresses(addresses.filter((address) => address.id !== id));\r\n//   };\r\n\r\n//   const handleSearch = (e) => {\r\n//     setSearchTerm(e.target.value);\r\n//   };\r\n\r\n//   const handleSearchManually = () => {\r\n//     setManualSearchMode(true); // Activate manual search mode\r\n//   };\r\n\r\n//   const handlePlaceSelect = (autocomplete) => {\r\n//     const place = autocomplete.getPlace();\r\n//     if (place && place.formatted_address) {\r\n//       setSelectedAddress(place.formatted_address);\r\n//       setManualSearchMode(false); // Close manual search after address is selected\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"manage-addresses\">\r\n//       {/* Search Bar Section */}\r\n//       <div className=\"search-bar\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search your area / pincode / apartment\"\r\n//           value={searchTerm}\r\n//           onChange={handleSearch}\r\n//         />\r\n//       </div>\r\n\r\n//       {/* Current Location and Enable Button */}\r\n//       <div className=\"location-section\">\r\n//         <div className=\"location-info\">\r\n//           <FaLocationCrosshairs color=\"red\" />\r\n//           <span className=\"current-location\">Current Location</span>\r\n//         </div>\r\n//         <button className=\"enable-btn\">Enable</button>\r\n//         <div className=\"underline\"></div>\r\n//       </div>\r\n\r\n//       {/* Manual Search Section */}\r\n//       {manualSearchMode && (\r\n//         <div className=\"manual-search\">\r\n//           <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\r\n//             <GoogleMap\r\n//               mapContainerStyle={{ width: '100%', height: '400px' }}\r\n//               zoom={12}\r\n//               center={{ lat: 0, lng: 0 }} // Optional: Center the map\r\n//             >\r\n//               <Autocomplete\r\n//                 onLoad={(autocomplete) => console.log('Autocomplete loaded')}\r\n//                 onPlaceChanged={(e) => handlePlaceSelect(e)}\r\n//               >\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Enter address\"\r\n//                   style={{\r\n//                     width: '100%',\r\n//                     padding: '10px',\r\n//                     fontSize: '16px',\r\n//                     borderRadius: '5px',\r\n//                     border: '1px solid #ccc',\r\n//                   }}\r\n//                 />\r\n//               </Autocomplete>\r\n//             </GoogleMap>\r\n//           </LoadScript>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Saved Location Section */}\r\n//       <div className=\"saved-location\">\r\n//         <h3>Saved Location</h3>\r\n//         <ul>\r\n//           {addresses.map((address) => (\r\n//             <li key={address.id} className=\"address-item\">\r\n//               <div className=\"address-info\">\r\n//                 <div className=\"address-type\">\r\n//                   {address.icon}\r\n//                   <strong>{address.type}</strong>\r\n//                 </div>\r\n//                 <p className=\"address-text\">{address.address}</p>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//         <div className=\"underline\"></div>\r\n//       </div>\r\n\r\n//       {/* Recent Searches Section */}\r\n//       <div className=\"recent-searches\">\r\n//         <h3>Recent Searches</h3>\r\n//         <ul>\r\n//           {recentSearches.map((search) => (\r\n//             <li key={search.id} className=\"address-item\">\r\n//               <div className=\"address-info\">\r\n//                 <div className=\"address-type\">\r\n//                   <FaMapMarkerAlt color=\"red\" />\r\n//                   <strong>{search.type}</strong>\r\n//                 </div>\r\n//                 <p className=\"address-text\">{search.address}</p>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//         <div className=\"underline\"></div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ManageAddresses;\r\nimport React, { useState } from 'react';\r\nimport { GoogleMap, Marker, useJsApiLoader } from '@react-google-maps/api';\r\nimport { FaHome, FaBuilding, FaUsers } from 'react-icons/fa';\r\nimport { FaLocationCrosshairs } from 'react-icons/fa6';\r\nimport '../styles/manageAddress.css';\r\n\r\nconst ManageAddresses = () => {\r\n  const [mapCenter, setMapCenter] = useState({ lat: 37.7749, lng: -122.4194 }); // Default to San Francisco\r\n  const [markerPosition, setMarkerPosition] = useState({ lat: 37.7749, lng: -122.4194 });\r\n  const [addresses, setAddresses] = useState([\r\n    { id: 1, type: 'Home', address: '123 Home St, Cityville', icon: <FaHome color=\"black\" /> },\r\n    { id: 2, type: 'Office', address: '456 Work Rd, Metropolis', icon: <FaBuilding color=\"black\" /> },\r\n    { id: 3, type: 'Friends & Family', address: '789 Friend Ave, Townsville', icon: <FaUsers color=\"black\" /> },\r\n  ]);\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    googleMapsApiKey: 'YOUR_API_KEY', // Replace with your API key\r\n  });\r\n\r\n  const handleEnableLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          setMapCenter({ lat: latitude, lng: longitude });\r\n          setMarkerPosition({ lat: latitude, lng: longitude });\r\n        },\r\n        (error) => {\r\n          console.error('Error fetching location:', error);\r\n          alert('Failed to fetch location. Please enable location services.');\r\n        }\r\n      );\r\n    } else {\r\n      alert('Geolocation is not supported by your browser.');\r\n    }\r\n  };\r\n\r\n  if (!isLoaded) return <div>Loading Map...</div>;\r\n\r\n  return (\r\n    <div className=\"manage-addresses\">\r\n      {/* Search Bar Section */}\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search your area / pincode / apartment\"\r\n        />\r\n      </div>\r\n\r\n      {/* Current Location and Enable Button */}\r\n      <div className=\"location-section\">\r\n        <div className=\"location-info\">\r\n          <FaLocationCrosshairs color=\"red\" />\r\n          <span className=\"current-location\">Current Location</span>\r\n        </div>\r\n        <button className=\"enable-btn\" onClick={handleEnableLocation}>Enable</button>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n\r\n      {/* Google Map */}\r\n      <div className=\"map-container\">\r\n        <GoogleMap\r\n          center={mapCenter}\r\n          zoom={15}\r\n          mapContainerStyle={{ width: '100%', height: '400px' }}\r\n        >\r\n          <Marker position={markerPosition} />\r\n        </GoogleMap>\r\n      </div>\r\n\r\n      {/* Saved Location Section */}\r\n      <div className=\"saved-location\">\r\n        <h3>Saved Location</h3>\r\n        <ul>\r\n          {addresses.map((address) => (\r\n            <li key={address.id} className=\"address-item\">\r\n              <div className=\"address-info\">\r\n                <div className=\"address-type\">\r\n                  {address.icon}\r\n                  <strong>{address.type}</strong>\r\n                </div>\r\n                <p className=\"address-text\">{address.address}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageAddresses;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}