{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreyoshi\\\\myproj\\\\frontend\\\\src\\\\components\\\\addressForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import { FaHome, FaBuilding, FaUserFriends, FaMapMarkerAlt } from 'react-icons/fa'; // Importing icons\n// import '../styles/addressForm.css';\n\n// const AddressForm = ({ location, onSave }) => {\n//   const [houseNo, setHouseNo] = useState('');\n//   const [area, setArea] = useState('');\n//   const [category, setCategory] = useState('Home');\n//   const [placeName, setPlaceName] = useState('');  // To store the place name from geocoding\n\n//   useEffect(() => {\n//     if (location) {\n//       getPlaceName(location); // Get the place name when location is available\n//     }\n//   }, [location]);\n\n//   const getPlaceName = (latLng) => {\n//     const geocoder = new window.google.maps.Geocoder();\n//     const latLngObject = new window.google.maps.LatLng(latLng.lat, latLng.lng);\n\n//     geocoder.geocode({ location: latLngObject }, (results, status) => {\n//       if (status === 'OK' && results[0]) {\n//         setPlaceName(results[0].formatted_address);  // Set the place name\n//       } else {\n//         setPlaceName('Place not found');\n//       }\n//     });\n//   };\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const addressData = { houseNo, area, category }; // Send the place name as location\n\n//     // Send data to the backend\n//     fetch('http://localhost:5000/api/addresses', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(addressData),\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       console.log('Address saved:', data);\n//       // You can also show a success message to the user or reset the form\n//     })\n//     .catch(error => {\n//       console.error('Error saving address:', error);\n//     });\n//   };\n\n//   return (\n//    <div>\n//       {/* Success/Error Message */}\n//       {message && <div className={`message ${message.includes('successfully') ? 'success' : 'error'}`}>{message}</div>}\n\n//       {/* Address Form */}\n//       <form onSubmit={handleSubmit} className=\"address-form\">\n//         {/* Location Display */}\n//         <div className=\"location-container\">\n//           <FaMapMarkerAlt className=\"location-icon\" />\n//           <p className=\"location\">{placeName ? placeName : 'No location selected'}</p>\n//         </div>\n\n//         {/* House/Flat/Block No. */}\n//         <div className=\"input-container\">\n//           <label>HOUSE / FLAT / BLOCK NO.</label>\n//           <input\n//             type=\"text\"\n//             value={houseNo}\n//             onChange={(e) => setHouseNo(e.target.value)}\n//             className=\"input-line\"\n//             required\n//           />\n//         </div>\n\n//         {/* Apartment/Road/Area */}\n//         <div className=\"input-container\">\n//           <label>APARTMENT / ROAD / AREA</label>\n//           <input\n//             type=\"text\"\n//             value={area}\n//             onChange={(e) => setArea(e.target.value)}\n//             className=\"input-line\"\n//             required\n//           />\n//         </div>\n\n//         {/* Save As Category */}\n//         <div className=\"category-container\">\n//           <label>SAVE AS</label>\n//           <div className=\"category-icons\">\n//             <div\n//               className={`icon ${category === 'Home' ? 'selected' : ''}`}\n//               onClick={() => setCategory('Home')}\n//             >\n//               <FaHome />\n//             </div>\n//             <div\n//               className={`icon ${category === 'Office' ? 'selected' : ''}`}\n//               onClick={() => setCategory('Office')}\n//             >\n//               <FaBuilding />\n//             </div>\n//             <div\n//               className={`icon ${category === 'Friends & Family' ? 'selected' : ''}`}\n//               onClick={() => setCategory('Friends & Family')}\n//             >\n//               <FaUserFriends />\n//             </div>\n//             <div\n//               className={`icon ${category === 'Others' ? 'selected' : ''}`}\n//               onClick={() => setCategory('Others')}\n//             >\n//               <FaMapMarkerAlt />\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Save Button */}\n//         <button type=\"submit\" className=\"save-button\">Save Address</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddressForm;\n\nimport React, { useState, useEffect } from 'react';\nimport { FaHome, FaBuilding, FaUserFriends, FaMapMarkerAlt } from 'react-icons/fa'; // Importing icons\nimport '../styles/addressForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddressForm = ({\n  location,\n  onSave\n}) => {\n  _s();\n  const [houseNo, setHouseNo] = useState('');\n  const [area, setArea] = useState('');\n  const [category, setCategory] = useState('Home');\n  const [placeName, setPlaceName] = useState(''); // To store the place name from geocoding\n  const [message, setMessage] = useState(''); // To display success or error message\n\n  useEffect(() => {\n    if (location) {\n      getPlaceName(location); // Get the place name when location is available\n    }\n  }, [location]);\n  const getPlaceName = latLng => {\n    const geocoder = new window.google.maps.Geocoder();\n    const latLngObject = new window.google.maps.LatLng(latLng.lat, latLng.lng);\n    geocoder.geocode({\n      location: latLngObject\n    }, (results, status) => {\n      if (status === 'OK' && results[0]) {\n        setPlaceName(results[0].formatted_address); // Set the place name\n      } else {\n        setPlaceName('Place not found');\n      }\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const addressData = {\n      houseNo,\n      area,\n      category,\n      location: placeName\n    }; // Include placeName as location\n\n    try {\n      const response = await fetch('http://localhost:5000/api/address', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(addressData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Address saved successfully!');\n        onSave(addressData); // Optionally pass data to parent\n      } else {\n        setMessage('Failed to save address. Please try again.');\n      }\n    } catch (err) {\n      console.error('Error:', err);\n      setMessage('An error occurred. Please try again.');\n    }\n\n    // Clear the message after 3 seconds\n    setTimeout(() => setMessage(''), 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message ${message.includes('successfully') ? 'success' : 'error'}`,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"address-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-container\",\n        children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n          className: \"location-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"location\",\n          children: placeName ? placeName : 'No location selected'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"HOUSE / FLAT / BLOCK NO.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: houseNo,\n          onChange: e => setHouseNo(e.target.value),\n          className: \"input-line\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"APARTMENT / ROAD / AREA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: area,\n          onChange: e => setArea(e.target.value),\n          className: \"input-line\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"SAVE AS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `icon ${category === 'Home' ? 'selected' : ''}`,\n            onClick: () => setCategory('Home'),\n            children: /*#__PURE__*/_jsxDEV(FaHome, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `icon ${category === 'Office' ? 'selected' : ''}`,\n            onClick: () => setCategory('Office'),\n            children: /*#__PURE__*/_jsxDEV(FaBuilding, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `icon ${category === 'Friends & Family' ? 'selected' : ''}`,\n            onClick: () => setCategory('Friends & Family'),\n            children: /*#__PURE__*/_jsxDEV(FaUserFriends, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `icon ${category === 'Others' ? 'selected' : ''}`,\n            onClick: () => setCategory('Others'),\n            children: /*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"save-button\",\n        children: \"Save Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s(AddressForm, \"KUiFWP6EY0KMQ04ur6wddNMKsU4=\");\n_c = AddressForm;\nexport default AddressForm;\nvar _c;\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"names":["React","useState","useEffect","FaHome","FaBuilding","FaUserFriends","FaMapMarkerAlt","jsxDEV","_jsxDEV","AddressForm","location","onSave","_s","houseNo","setHouseNo","area","setArea","category","setCategory","placeName","setPlaceName","message","setMessage","getPlaceName","latLng","geocoder","window","google","maps","Geocoder","latLngObject","LatLng","lat","lng","geocode","results","status","formatted_address","handleSubmit","e","preventDefault","addressData","response","fetch","method","headers","body","JSON","stringify","data","json","ok","err","console","error","setTimeout","children","className","includes","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sreyoshi/myproj/frontend/src/components/addressForm.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { FaHome, FaBuilding, FaUserFriends, FaMapMarkerAlt } from 'react-icons/fa'; // Importing icons\r\n// import '../styles/addressForm.css';\r\n\r\n// const AddressForm = ({ location, onSave }) => {\r\n//   const [houseNo, setHouseNo] = useState('');\r\n//   const [area, setArea] = useState('');\r\n//   const [category, setCategory] = useState('Home');\r\n//   const [placeName, setPlaceName] = useState('');  // To store the place name from geocoding\r\n\r\n//   useEffect(() => {\r\n//     if (location) {\r\n//       getPlaceName(location); // Get the place name when location is available\r\n//     }\r\n//   }, [location]);\r\n\r\n//   const getPlaceName = (latLng) => {\r\n//     const geocoder = new window.google.maps.Geocoder();\r\n//     const latLngObject = new window.google.maps.LatLng(latLng.lat, latLng.lng);\r\n\r\n//     geocoder.geocode({ location: latLngObject }, (results, status) => {\r\n//       if (status === 'OK' && results[0]) {\r\n//         setPlaceName(results[0].formatted_address);  // Set the place name\r\n//       } else {\r\n//         setPlaceName('Place not found');\r\n//       }\r\n//     });\r\n//   };\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const addressData = { houseNo, area, category }; // Send the place name as location\r\n    \r\n//     // Send data to the backend\r\n//     fetch('http://localhost:5000/api/addresses', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(addressData),\r\n//     })\r\n//     .then(response => response.json())\r\n//     .then(data => {\r\n//       console.log('Address saved:', data);\r\n//       // You can also show a success message to the user or reset the form\r\n//     })\r\n//     .catch(error => {\r\n//       console.error('Error saving address:', error);\r\n//     });\r\n//   };\r\n  \r\n\r\n//   return (\r\n//    <div>\r\n//       {/* Success/Error Message */}\r\n//       {message && <div className={`message ${message.includes('successfully') ? 'success' : 'error'}`}>{message}</div>}\r\n\r\n//       {/* Address Form */}\r\n//       <form onSubmit={handleSubmit} className=\"address-form\">\r\n//         {/* Location Display */}\r\n//         <div className=\"location-container\">\r\n//           <FaMapMarkerAlt className=\"location-icon\" />\r\n//           <p className=\"location\">{placeName ? placeName : 'No location selected'}</p>\r\n//         </div>\r\n\r\n//         {/* House/Flat/Block No. */}\r\n//         <div className=\"input-container\">\r\n//           <label>HOUSE / FLAT / BLOCK NO.</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={houseNo}\r\n//             onChange={(e) => setHouseNo(e.target.value)}\r\n//             className=\"input-line\"\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Apartment/Road/Area */}\r\n//         <div className=\"input-container\">\r\n//           <label>APARTMENT / ROAD / AREA</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={area}\r\n//             onChange={(e) => setArea(e.target.value)}\r\n//             className=\"input-line\"\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Save As Category */}\r\n//         <div className=\"category-container\">\r\n//           <label>SAVE AS</label>\r\n//           <div className=\"category-icons\">\r\n//             <div\r\n//               className={`icon ${category === 'Home' ? 'selected' : ''}`}\r\n//               onClick={() => setCategory('Home')}\r\n//             >\r\n//               <FaHome />\r\n//             </div>\r\n//             <div\r\n//               className={`icon ${category === 'Office' ? 'selected' : ''}`}\r\n//               onClick={() => setCategory('Office')}\r\n//             >\r\n//               <FaBuilding />\r\n//             </div>\r\n//             <div\r\n//               className={`icon ${category === 'Friends & Family' ? 'selected' : ''}`}\r\n//               onClick={() => setCategory('Friends & Family')}\r\n//             >\r\n//               <FaUserFriends />\r\n//             </div>\r\n//             <div\r\n//               className={`icon ${category === 'Others' ? 'selected' : ''}`}\r\n//               onClick={() => setCategory('Others')}\r\n//             >\r\n//               <FaMapMarkerAlt />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Save Button */}\r\n//         <button type=\"submit\" className=\"save-button\">Save Address</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddressForm;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FaHome, FaBuilding, FaUserFriends, FaMapMarkerAlt } from 'react-icons/fa'; // Importing icons\r\nimport '../styles/addressForm.css';\r\n\r\nconst AddressForm = ({ location, onSave }) => {\r\n  const [houseNo, setHouseNo] = useState('');\r\n  const [area, setArea] = useState('');\r\n  const [category, setCategory] = useState('Home');\r\n  const [placeName, setPlaceName] = useState(''); // To store the place name from geocoding\r\n  const [message, setMessage] = useState(''); // To display success or error message\r\n\r\n  useEffect(() => {\r\n    if (location) {\r\n      getPlaceName(location); // Get the place name when location is available\r\n    }\r\n  }, [location]);\r\n\r\n  const getPlaceName = (latLng) => {\r\n    const geocoder = new window.google.maps.Geocoder();\r\n    const latLngObject = new window.google.maps.LatLng(latLng.lat, latLng.lng);\r\n\r\n    geocoder.geocode({ location: latLngObject }, (results, status) => {\r\n      if (status === 'OK' && results[0]) {\r\n        setPlaceName(results[0].formatted_address); // Set the place name\r\n      } else {\r\n        setPlaceName('Place not found');\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const addressData = { houseNo, area, category, location: placeName }; // Include placeName as location\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/address', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(addressData),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMessage('Address saved successfully!');\r\n        onSave(addressData); // Optionally pass data to parent\r\n      } else {\r\n        setMessage('Failed to save address. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error:', err);\r\n      setMessage('An error occurred. Please try again.');\r\n    }\r\n\r\n    // Clear the message after 3 seconds\r\n    setTimeout(() => setMessage(''), 3000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Success/Error Message */}\r\n      {message && <div className={`message ${message.includes('successfully') ? 'success' : 'error'}`}>{message}</div>}\r\n\r\n      {/* Address Form */}\r\n      <form onSubmit={handleSubmit} className=\"address-form\">\r\n        {/* Location Display */}\r\n        <div className=\"location-container\">\r\n          <FaMapMarkerAlt className=\"location-icon\" />\r\n          <p className=\"location\">{placeName ? placeName : 'No location selected'}</p>\r\n        </div>\r\n\r\n        {/* House/Flat/Block No. */}\r\n        <div className=\"input-container\">\r\n          <label>HOUSE / FLAT / BLOCK NO.</label>\r\n          <input\r\n            type=\"text\"\r\n            value={houseNo}\r\n            onChange={(e) => setHouseNo(e.target.value)}\r\n            className=\"input-line\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Apartment/Road/Area */}\r\n        <div className=\"input-container\">\r\n          <label>APARTMENT / ROAD / AREA</label>\r\n          <input\r\n            type=\"text\"\r\n            value={area}\r\n            onChange={(e) => setArea(e.target.value)}\r\n            className=\"input-line\"\r\n            required\r\n          />\r\n        </div>\r\n\r\n        {/* Save As Category */}\r\n        <div className=\"category-container\">\r\n          <label>SAVE AS</label>\r\n          <div className=\"category-icons\">\r\n            <div\r\n              className={`icon ${category === 'Home' ? 'selected' : ''}`}\r\n              onClick={() => setCategory('Home')}\r\n            >\r\n              <FaHome />\r\n            </div>\r\n            <div\r\n              className={`icon ${category === 'Office' ? 'selected' : ''}`}\r\n              onClick={() => setCategory('Office')}\r\n            >\r\n              <FaBuilding />\r\n            </div>\r\n            <div\r\n              className={`icon ${category === 'Friends & Family' ? 'selected' : ''}`}\r\n              onClick={() => setCategory('Friends & Family')}\r\n            >\r\n              <FaUserFriends />\r\n            </div>\r\n            <div\r\n              className={`icon ${category === 'Others' ? 'selected' : ''}`}\r\n              onClick={() => setCategory('Others')}\r\n            >\r\n              <FaMapMarkerAlt />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Save Button */}\r\n        <button type=\"submit\" className=\"save-button\">Save Address</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}