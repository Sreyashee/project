{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import { FaHome, FaBuilding, FaUserFriends, FaMapMarkerAlt } from 'react-icons/fa'; // Importing icons\n// import '../styles/addressForm.css';\n\n// const AddressForm = ({ location, onSave }) => {\n//   const [houseNo, setHouseNo] = useState('');\n//   const [area, setArea] = useState('');\n//   const [category, setCategory] = useState('Home');\n//   const [placeName, setPlaceName] = useState('');  // To store the place name from geocoding\n\n//   useEffect(() => {\n//     if (location) {\n//       getPlaceName(location); // Get the place name when location is available\n//     }\n//   }, [location]);\n\n//   const getPlaceName = (latLng) => {\n//     const geocoder = new window.google.maps.Geocoder();\n//     const latLngObject = new window.google.maps.LatLng(latLng.lat, latLng.lng);\n\n//     geocoder.geocode({ location: latLngObject }, (results, status) => {\n//       if (status === 'OK' && results[0]) {\n//         setPlaceName(results[0].formatted_address);  // Set the place name\n//       } else {\n//         setPlaceName('Place not found');\n//       }\n//     });\n//   };\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const addressData = { houseNo, area, category }; // Send the place name as location\n\n//     // Send data to the backend\n//     fetch('http://localhost:5000/api/addresses', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(addressData),\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       console.log('Address saved:', data);\n//       // You can also show a success message to the user or reset the form\n//     })\n//     .catch(error => {\n//       console.error('Error saving address:', error);\n//     });\n//   };\n\n//   return (\n//    <div>\n//       {/* Success/Error Message */}\n//       {message && <div className={`message ${message.includes('successfully') ? 'success' : 'error'}`}>{message}</div>}\n\n//       {/* Address Form */}\n//       <form onSubmit={handleSubmit} className=\"address-form\">\n//         {/* Location Display */}\n//         <div className=\"location-container\">\n//           <FaMapMarkerAlt className=\"location-icon\" />\n//           <p className=\"location\">{placeName ? placeName : 'No location selected'}</p>\n//         </div>\n\n//         {/* House/Flat/Block No. */}\n//         <div className=\"input-container\">\n//           <label>HOUSE / FLAT / BLOCK NO.</label>\n//           <input\n//             type=\"text\"\n//             value={houseNo}\n//             onChange={(e) => setHouseNo(e.target.value)}\n//             className=\"input-line\"\n//             required\n//           />\n//         </div>\n\n//         {/* Apartment/Road/Area */}\n//         <div className=\"input-container\">\n//           <label>APARTMENT / ROAD / AREA</label>\n//           <input\n//             type=\"text\"\n//             value={area}\n//             onChange={(e) => setArea(e.target.value)}\n//             className=\"input-line\"\n//             required\n//           />\n//         </div>\n\n//         {/* Save As Category */}\n//         <div className=\"category-container\">\n//           <label>SAVE AS</label>\n//           <div className=\"category-icons\">\n//             <div\n//               className={`icon ${category === 'Home' ? 'selected' : ''}`}\n//               onClick={() => setCategory('Home')}\n//             >\n//               <FaHome />\n//             </div>\n//             <div\n//               className={`icon ${category === 'Office' ? 'selected' : ''}`}\n//               onClick={() => setCategory('Office')}\n//             >\n//               <FaBuilding />\n//             </div>\n//             <div\n//               className={`icon ${category === 'Friends & Family' ? 'selected' : ''}`}\n//               onClick={() => setCategory('Friends & Family')}\n//             >\n//               <FaUserFriends />\n//             </div>\n//             <div\n//               className={`icon ${category === 'Others' ? 'selected' : ''}`}\n//               onClick={() => setCategory('Others')}\n//             >\n//               <FaMapMarkerAlt />\n//             </div>\n//           </div>\n//         </div>\n\n//         {/* Save Button */}\n//         <button type=\"submit\" className=\"save-button\">Save Address</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default AddressForm;","map":{"version":3,"names":[],"sources":["C:/Users/sreyoshi/myproj/frontend/src/components/addressForm.js"],"sourcesContent":["\r\n// import React, { useState, useEffect } from 'react';\r\n// import { FaHome, FaBuilding, FaUserFriends, FaMapMarkerAlt } from 'react-icons/fa'; // Importing icons\r\n// import '../styles/addressForm.css';\r\n\r\n// const AddressForm = ({ location, onSave }) => {\r\n//   const [houseNo, setHouseNo] = useState('');\r\n//   const [area, setArea] = useState('');\r\n//   const [category, setCategory] = useState('Home');\r\n//   const [placeName, setPlaceName] = useState('');  // To store the place name from geocoding\r\n\r\n//   useEffect(() => {\r\n//     if (location) {\r\n//       getPlaceName(location); // Get the place name when location is available\r\n//     }\r\n//   }, [location]);\r\n\r\n//   const getPlaceName = (latLng) => {\r\n//     const geocoder = new window.google.maps.Geocoder();\r\n//     const latLngObject = new window.google.maps.LatLng(latLng.lat, latLng.lng);\r\n\r\n//     geocoder.geocode({ location: latLngObject }, (results, status) => {\r\n//       if (status === 'OK' && results[0]) {\r\n//         setPlaceName(results[0].formatted_address);  // Set the place name\r\n//       } else {\r\n//         setPlaceName('Place not found');\r\n//       }\r\n//     });\r\n//   };\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const addressData = { houseNo, area, category }; // Send the place name as location\r\n    \r\n//     // Send data to the backend\r\n//     fetch('http://localhost:5000/api/addresses', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify(addressData),\r\n//     })\r\n//     .then(response => response.json())\r\n//     .then(data => {\r\n//       console.log('Address saved:', data);\r\n//       // You can also show a success message to the user or reset the form\r\n//     })\r\n//     .catch(error => {\r\n//       console.error('Error saving address:', error);\r\n//     });\r\n//   };\r\n  \r\n\r\n//   return (\r\n//    <div>\r\n//       {/* Success/Error Message */}\r\n//       {message && <div className={`message ${message.includes('successfully') ? 'success' : 'error'}`}>{message}</div>}\r\n\r\n//       {/* Address Form */}\r\n//       <form onSubmit={handleSubmit} className=\"address-form\">\r\n//         {/* Location Display */}\r\n//         <div className=\"location-container\">\r\n//           <FaMapMarkerAlt className=\"location-icon\" />\r\n//           <p className=\"location\">{placeName ? placeName : 'No location selected'}</p>\r\n//         </div>\r\n\r\n//         {/* House/Flat/Block No. */}\r\n//         <div className=\"input-container\">\r\n//           <label>HOUSE / FLAT / BLOCK NO.</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={houseNo}\r\n//             onChange={(e) => setHouseNo(e.target.value)}\r\n//             className=\"input-line\"\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Apartment/Road/Area */}\r\n//         <div className=\"input-container\">\r\n//           <label>APARTMENT / ROAD / AREA</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             value={area}\r\n//             onChange={(e) => setArea(e.target.value)}\r\n//             className=\"input-line\"\r\n//             required\r\n//           />\r\n//         </div>\r\n\r\n//         {/* Save As Category */}\r\n//         <div className=\"category-container\">\r\n//           <label>SAVE AS</label>\r\n//           <div className=\"category-icons\">\r\n//             <div\r\n//               className={`icon ${category === 'Home' ? 'selected' : ''}`}\r\n//               onClick={() => setCategory('Home')}\r\n//             >\r\n//               <FaHome />\r\n//             </div>\r\n//             <div\r\n//               className={`icon ${category === 'Office' ? 'selected' : ''}`}\r\n//               onClick={() => setCategory('Office')}\r\n//             >\r\n//               <FaBuilding />\r\n//             </div>\r\n//             <div\r\n//               className={`icon ${category === 'Friends & Family' ? 'selected' : ''}`}\r\n//               onClick={() => setCategory('Friends & Family')}\r\n//             >\r\n//               <FaUserFriends />\r\n//             </div>\r\n//             <div\r\n//               className={`icon ${category === 'Others' ? 'selected' : ''}`}\r\n//               onClick={() => setCategory('Others')}\r\n//             >\r\n//               <FaMapMarkerAlt />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* Save Button */}\r\n//         <button type=\"submit\" className=\"save-button\">Save Address</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddressForm;\r\n"],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}