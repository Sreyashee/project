{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreyoshi\\\\myproj\\\\frontend\\\\src\\\\components\\\\manageAddress.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FaMapMarkerAlt, FaHome, FaBuilding, FaUsers } from 'react-icons/fa'; // Address type and location icons\nimport { GoogleMap, LoadScript, Autocomplete, Marker } from '@react-google-maps/api'; // Import Google Maps components\nimport { FaLocationCrosshairs } from \"react-icons/fa6\";\nimport '../styles/manageAddress.css';\n\n// const ManageAddresses = () => {\n//   const [addresses, setAddresses] = useState([\n//     { id: 1, type: 'Home', address: '123 Home St, Cityville', icon: <FaHome color=\"black\" /> },\n//     { id: 2, type: 'Office', address: '456 Work Rd, Metropolis', icon: <FaBuilding color=\"black\" /> },\n//     { id: 3, type: 'Friends & Family', address: '789 Friend Ave, Townsville', icon: <FaUsers color=\"black\" /> },\n//   ]);\n\n//   const [recentSearches, setRecentSearches] = useState([\n//     { id: 1, type: 'Search 1', address: 'Some Location, City' },\n//     { id: 2, type: 'Search 2', address: 'Another Location, Metropolis' },\n//     { id: 3, type: 'Search 3', address: 'Yet Another Location, Townsville' },\n//   ]);\n\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedAddress, setSelectedAddress] = useState('');\n//   const [manualSearchMode, setManualSearchMode] = useState(false);\n\n//   const handleDelete = (id) => {\n//     setAddresses(addresses.filter((address) => address.id !== id));\n//   };\n\n//   const handleSearch = (e) => {\n//     setSearchTerm(e.target.value);\n//   };\n\n//   const handleSearchManually = () => {\n//     setManualSearchMode(true); // Activate manual search mode\n//   };\n\n//   const handlePlaceSelect = (autocomplete) => {\n//     const place = autocomplete.getPlace();\n//     if (place && place.formatted_address) {\n//       setSelectedAddress(place.formatted_address);\n//       setManualSearchMode(false); // Close manual search after address is selected\n//     }\n//   };\n\n//   return (\n//     <div className=\"manage-addresses\">\n//       {/* Search Bar Section */}\n//       <div className=\"search-bar\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"Search your area / pincode / apartment\"\n//           value={searchTerm}\n//           onChange={handleSearch}\n//         />\n//       </div>\n\n//       {/* Current Location and Enable Button */}\n//       <div className=\"location-section\">\n//         <div className=\"location-info\">\n//           <FaLocationCrosshairs color=\"red\" />\n//           <span className=\"current-location\">Current Location</span>\n//         </div>\n//         <button className=\"enable-btn\">Enable</button>\n//         <div className=\"underline\"></div>\n//       </div>\n\n//       {/* Manual Search Section */}\n//       {manualSearchMode && (\n//         <div className=\"manual-search\">\n//           <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\n//             <GoogleMap\n//               mapContainerStyle={{ width: '100%', height: '400px' }}\n//               zoom={12}\n//               center={{ lat: 0, lng: 0 }} // Optional: Center the map\n//             >\n//               <Autocomplete\n//                 onLoad={(autocomplete) => console.log('Autocomplete loaded')}\n//                 onPlaceChanged={(e) => handlePlaceSelect(e)}\n//               >\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter address\"\n//                   style={{\n//                     width: '100%',\n//                     padding: '10px',\n//                     fontSize: '16px',\n//                     borderRadius: '5px',\n//                     border: '1px solid #ccc',\n//                   }}\n//                 />\n//               </Autocomplete>\n//             </GoogleMap>\n//           </LoadScript>\n//         </div>\n//       )}\n\n//       {/* Saved Location Section */}\n//       <div className=\"saved-location\">\n//         <h3>Saved Location</h3>\n//         <ul>\n//           {addresses.map((address) => (\n//             <li key={address.id} className=\"address-item\">\n//               <div className=\"address-info\">\n//                 <div className=\"address-type\">\n//                   {address.icon}\n//                   <strong>{address.type}</strong>\n//                 </div>\n//                 <p className=\"address-text\">{address.address}</p>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//         <div className=\"underline\"></div>\n//       </div>\n\n//       {/* Recent Searches Section */}\n//       <div className=\"recent-searches\">\n//         <h3>Recent Searches</h3>\n//         <ul>\n//           {recentSearches.map((search) => (\n//             <li key={search.id} className=\"address-item\">\n//               <div className=\"address-info\">\n//                 <div className=\"address-type\">\n//                   <FaMapMarkerAlt color=\"red\" />\n//                   <strong>{search.type}</strong>\n//                 </div>\n//                 <p className=\"address-text\">{search.address}</p>\n//               </div>\n//             </li>\n//           ))}\n//         </ul>\n//         <div className=\"underline\"></div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ManageAddresses;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageAddresses = () => {\n  _s();\n  const [addresses, setAddresses] = useState([{\n    id: 1,\n    type: 'Home',\n    address: '123 Home St, Cityville',\n    icon: /*#__PURE__*/_jsxDEV(FaHome, {\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 69\n    }, this)\n  }, {\n    id: 2,\n    type: 'Office',\n    address: '456 Work Rd, Metropolis',\n    icon: /*#__PURE__*/_jsxDEV(FaBuilding, {\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 72\n    }, this)\n  }, {\n    id: 3,\n    type: 'Friends & Family',\n    address: '789 Friend Ave, Townsville',\n    icon: /*#__PURE__*/_jsxDEV(FaUsers, {\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 85\n    }, this)\n  }]);\n  const [recentSearches, setRecentSearches] = useState([]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 37.7749,\n    lng: -122.4194\n  }); // Default location\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: 'YOUR_API_KEY',\n    // Replace with your API key\n    libraries: ['places'] // Necessary for address search\n  });\n  const handleSearchLocation = async () => {\n    const address = prompt(\"Enter the address:\");\n    if (!address) return;\n    try {\n      const geocodeUrl = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=YOUR_API_KEY`;\n      const response = await fetch(geocodeUrl);\n      const data = await response.json();\n      if (data.status === \"OK\" && data.results.length > 0) {\n        const location = data.results[0].geometry.location;\n        setMapCenter(location);\n        setRecentSearches(prev => [...prev, {\n          id: Date.now(),\n          type: \"Search\",\n          address\n        }]);\n      } else {\n        alert(\"Address not found. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching geocode:\", error);\n      alert(\"Failed to fetch location. Please check your internet connection or API key.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-addresses\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search your area / pincode / apartment\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-info\",\n        children: [/*#__PURE__*/_jsxDEV(FaLocationCrosshairs, {\n          color: \"red\",\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"current-location\",\n          children: \"Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"enable-btn\",\n        children: \"Enable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-location-btn\",\n      onClick: handleSearchLocation,\n      children: \"Search Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: isLoaded ? /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: mapCenter,\n        zoom: 14,\n        mapContainerStyle: {\n          width: \"100%\",\n          height: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: mapCenter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Map...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addresses.map(address => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"address-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"address-type\",\n              children: [address.icon, /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: address.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address-text\",\n              children: address.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)\n        }, address.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-searches\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recentSearches.map(search => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"address-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"address-type\",\n              children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n                color: \"red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: search.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address-text\",\n              children: search.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)\n        }, search.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageAddresses, \"Aa74WDrR2ibgTP1+ZMbFnQVZr38=\", true);\n_c = ManageAddresses;\nexport default ManageAddresses;\nvar _c;\n$RefreshReg$(_c, \"ManageAddresses\");","map":{"version":3,"names":["React","useState","FaMapMarkerAlt","FaHome","FaBuilding","FaUsers","GoogleMap","LoadScript","Autocomplete","Marker","FaLocationCrosshairs","jsxDEV","_jsxDEV","ManageAddresses","_s","addresses","setAddresses","id","type","address","icon","color","fileName","_jsxFileName","lineNumber","columnNumber","recentSearches","setRecentSearches","mapCenter","setMapCenter","lat","lng","searchTerm","setSearchTerm","isLoaded","useJsApiLoader","googleMapsApiKey","libraries","handleSearchLocation","prompt","geocodeUrl","encodeURIComponent","response","fetch","data","json","status","results","length","location","geometry","prev","Date","now","alert","error","console","className","children","placeholder","value","onChange","e","target","size","onClick","center","zoom","mapContainerStyle","width","height","position","map","search","_c","$RefreshReg$"],"sources":["C:/Users/sreyoshi/myproj/frontend/src/components/manageAddress.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { FaMapMarkerAlt, FaHome, FaBuilding, FaUsers } from 'react-icons/fa'; // Address type and location icons\r\nimport { GoogleMap, LoadScript, Autocomplete, Marker } from '@react-google-maps/api'; // Import Google Maps components\r\nimport { FaLocationCrosshairs } from \"react-icons/fa6\";\r\nimport '../styles/manageAddress.css';\r\n\r\n// const ManageAddresses = () => {\r\n//   const [addresses, setAddresses] = useState([\r\n//     { id: 1, type: 'Home', address: '123 Home St, Cityville', icon: <FaHome color=\"black\" /> },\r\n//     { id: 2, type: 'Office', address: '456 Work Rd, Metropolis', icon: <FaBuilding color=\"black\" /> },\r\n//     { id: 3, type: 'Friends & Family', address: '789 Friend Ave, Townsville', icon: <FaUsers color=\"black\" /> },\r\n//   ]);\r\n\r\n//   const [recentSearches, setRecentSearches] = useState([\r\n//     { id: 1, type: 'Search 1', address: 'Some Location, City' },\r\n//     { id: 2, type: 'Search 2', address: 'Another Location, Metropolis' },\r\n//     { id: 3, type: 'Search 3', address: 'Yet Another Location, Townsville' },\r\n//   ]);\r\n\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [selectedAddress, setSelectedAddress] = useState('');\r\n//   const [manualSearchMode, setManualSearchMode] = useState(false);\r\n\r\n//   const handleDelete = (id) => {\r\n//     setAddresses(addresses.filter((address) => address.id !== id));\r\n//   };\r\n\r\n//   const handleSearch = (e) => {\r\n//     setSearchTerm(e.target.value);\r\n//   };\r\n\r\n//   const handleSearchManually = () => {\r\n//     setManualSearchMode(true); // Activate manual search mode\r\n//   };\r\n\r\n//   const handlePlaceSelect = (autocomplete) => {\r\n//     const place = autocomplete.getPlace();\r\n//     if (place && place.formatted_address) {\r\n//       setSelectedAddress(place.formatted_address);\r\n//       setManualSearchMode(false); // Close manual search after address is selected\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"manage-addresses\">\r\n//       {/* Search Bar Section */}\r\n//       <div className=\"search-bar\">\r\n//         <input\r\n//           type=\"text\"\r\n//           placeholder=\"Search your area / pincode / apartment\"\r\n//           value={searchTerm}\r\n//           onChange={handleSearch}\r\n//         />\r\n//       </div>\r\n\r\n//       {/* Current Location and Enable Button */}\r\n//       <div className=\"location-section\">\r\n//         <div className=\"location-info\">\r\n//           <FaLocationCrosshairs color=\"red\" />\r\n//           <span className=\"current-location\">Current Location</span>\r\n//         </div>\r\n//         <button className=\"enable-btn\">Enable</button>\r\n//         <div className=\"underline\"></div>\r\n//       </div>\r\n\r\n//       {/* Manual Search Section */}\r\n//       {manualSearchMode && (\r\n//         <div className=\"manual-search\">\r\n//           <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\r\n//             <GoogleMap\r\n//               mapContainerStyle={{ width: '100%', height: '400px' }}\r\n//               zoom={12}\r\n//               center={{ lat: 0, lng: 0 }} // Optional: Center the map\r\n//             >\r\n//               <Autocomplete\r\n//                 onLoad={(autocomplete) => console.log('Autocomplete loaded')}\r\n//                 onPlaceChanged={(e) => handlePlaceSelect(e)}\r\n//               >\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   placeholder=\"Enter address\"\r\n//                   style={{\r\n//                     width: '100%',\r\n//                     padding: '10px',\r\n//                     fontSize: '16px',\r\n//                     borderRadius: '5px',\r\n//                     border: '1px solid #ccc',\r\n//                   }}\r\n//                 />\r\n//               </Autocomplete>\r\n//             </GoogleMap>\r\n//           </LoadScript>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Saved Location Section */}\r\n//       <div className=\"saved-location\">\r\n//         <h3>Saved Location</h3>\r\n//         <ul>\r\n//           {addresses.map((address) => (\r\n//             <li key={address.id} className=\"address-item\">\r\n//               <div className=\"address-info\">\r\n//                 <div className=\"address-type\">\r\n//                   {address.icon}\r\n//                   <strong>{address.type}</strong>\r\n//                 </div>\r\n//                 <p className=\"address-text\">{address.address}</p>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//         <div className=\"underline\"></div>\r\n//       </div>\r\n\r\n//       {/* Recent Searches Section */}\r\n//       <div className=\"recent-searches\">\r\n//         <h3>Recent Searches</h3>\r\n//         <ul>\r\n//           {recentSearches.map((search) => (\r\n//             <li key={search.id} className=\"address-item\">\r\n//               <div className=\"address-info\">\r\n//                 <div className=\"address-type\">\r\n//                   <FaMapMarkerAlt color=\"red\" />\r\n//                   <strong>{search.type}</strong>\r\n//                 </div>\r\n//                 <p className=\"address-text\">{search.address}</p>\r\n//               </div>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//         <div className=\"underline\"></div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ManageAddresses;\r\n\r\n\r\n\r\nconst ManageAddresses = () => {\r\n  const [addresses, setAddresses] = useState([\r\n    { id: 1, type: 'Home', address: '123 Home St, Cityville', icon: <FaHome color=\"black\" /> },\r\n    { id: 2, type: 'Office', address: '456 Work Rd, Metropolis', icon: <FaBuilding color=\"black\" /> },\r\n    { id: 3, type: 'Friends & Family', address: '789 Friend Ave, Townsville', icon: <FaUsers color=\"black\" /> },\r\n  ]);\r\n  \r\n  const [recentSearches, setRecentSearches] = useState([]);\r\n  const [mapCenter, setMapCenter] = useState({ lat: 37.7749, lng: -122.4194 }); // Default location\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const { isLoaded } = useJsApiLoader({\r\n    googleMapsApiKey: 'YOUR_API_KEY', // Replace with your API key\r\n    libraries: ['places'], // Necessary for address search\r\n  });\r\n\r\n  const handleSearchLocation = async () => {\r\n    const address = prompt(\"Enter the address:\");\r\n    if (!address) return;\r\n\r\n    try {\r\n      const geocodeUrl = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=YOUR_API_KEY`;\r\n      const response = await fetch(geocodeUrl);\r\n      const data = await response.json();\r\n\r\n      if (data.status === \"OK\" && data.results.length > 0) {\r\n        const location = data.results[0].geometry.location;\r\n        setMapCenter(location);\r\n        setRecentSearches((prev) => [...prev, { id: Date.now(), type: \"Search\", address }]);\r\n      } else {\r\n        alert(\"Address not found. Please try again.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching geocode:\", error);\r\n      alert(\"Failed to fetch location. Please check your internet connection or API key.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"manage-addresses\">\r\n      {/* Search Bar Section */}\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search your area / pincode / apartment\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      {/* Current Location and Enable Button */}\r\n      <div className=\"location-section\">\r\n        <div className=\"location-info\">\r\n          <FaLocationCrosshairs color=\"red\" size={24} />\r\n          <span className=\"current-location\">Current Location</span>\r\n        </div>\r\n        <button className=\"enable-btn\">Enable</button>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n\r\n      {/* Search Location Button */}\r\n      <button className=\"search-location-btn\" onClick={handleSearchLocation}>\r\n        Search Location\r\n      </button>\r\n\r\n      {/* Map Section */}\r\n      <div className=\"map-container\">\r\n        {isLoaded ? (\r\n          <GoogleMap\r\n            center={mapCenter}\r\n            zoom={14}\r\n            mapContainerStyle={{ width: \"100%\", height: \"400px\" }}\r\n          >\r\n            <Marker position={mapCenter} />\r\n          </GoogleMap>\r\n        ) : (\r\n          <p>Loading Map...</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Saved Location Section */}\r\n      <div className=\"saved-location\">\r\n        <h3>Saved Location</h3>\r\n        <ul>\r\n          {addresses.map((address) => (\r\n            <li key={address.id} className=\"address-item\">\r\n              <div className=\"address-info\">\r\n                {/* Address Type with Icon */}\r\n                <div className=\"address-type\">\r\n                  {address.icon}\r\n                  <strong>{address.type}</strong>\r\n                </div>\r\n                {/* Address below the Type */}\r\n                <p className=\"address-text\">{address.address}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n\r\n      {/* Recent Searches Section */}\r\n      <div className=\"recent-searches\">\r\n        <h3>Recent Searches</h3>\r\n        <ul>\r\n          {recentSearches.map((search) => (\r\n            <li key={search.id} className=\"address-item\">\r\n              <div className=\"address-info\">\r\n                {/* Address Type with Icon */}\r\n                <div className=\"address-type\">\r\n                  <FaMapMarkerAlt color=\"red\" />\r\n                  <strong>{search.type}</strong>\r\n                </div>\r\n                {/* Address below the Type */}\r\n                <p className=\"address-text\">{search.address}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageAddresses;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}