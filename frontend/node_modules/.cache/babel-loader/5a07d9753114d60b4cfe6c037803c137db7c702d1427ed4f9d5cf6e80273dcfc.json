{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreyoshi\\\\myproj\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import MapPicker from './components/mapPicker';\n// import LocationModal from './components/locationModal';\n// import useGeolocation from './hooks/useGeolocation';\n\n// const App = () => {\n//   const { position, error } = useGeolocation();\n//   const [showModal, setShowModal] = useState(true);\n//   const [selectedLocation, setSelectedLocation] = useState(null);\n\n//   // Handle enabling location (requesting browser permissions)\n//   const handleEnableLocation = () => {\n//     if (position) {\n//       setSelectedLocation({\n//         lat: position.coords.latitude,\n//         lng: position.coords.longitude,\n//       });\n//       setShowModal(false); // Close the modal once location is granted\n//     } else {\n//       alert('Location permission denied or unavailable.');\n//     }\n//   };\n\n//   // Handle manual search (trigger map or input field for address search)\n//   const handleManualSearch = () => {\n//     setShowModal(false); // Close the modal for manual search\n//   };\n\n//   // Handle the selected location from the map\n//   const handleLocationSelect = (loc) => {\n//     setSelectedLocation(loc);\n//   };\n\n//   return (\n//     <div>\n//       {showModal && <LocationModal onEnable={handleEnableLocation} onManualSearch={handleManualSearch} />}\n//       <MapPicker onLocationSelect={handleLocationSelect} initialLocation={selectedLocation} />\n//       {selectedLocation && (\n//         <div className=\"selected-location\">\n//           <p>Selected Location:</p>\n//           <p>Lat: {selectedLocation.lat}</p>\n//           <p>Lng: {selectedLocation.lng}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport MapPicker from './components/mapPicker';\nimport LocationModal from './components/locationModal';\nimport useGeolocation from './hooks/useGeolocation';\nimport AddressForm from './components/addressForm'; // Import AddressForm component\nimport './App.css'; // Ensure App-wide styles are included\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    position,\n    error\n  } = useGeolocation();\n  const [addresses, setAddresses] = useState([]); // State to hold saved addresses\n  const [isLocationEnabled, setIsLocationEnabled] = useState(false); // Track if location is enabled\n  const [manualSearchTriggered, setManualSearchTriggered] = useState(false); // Track if manual search is triggered\n\n  // Handle saving the address\n  const handleSaveAddress = newAddress => {\n    setAddresses([...addresses, newAddress]);\n    alert('Address saved successfully!');\n  };\n\n  // Enable location if geolocation permission is granted\n  const handleEnableLocation = () => {\n    if (position) {\n      setIsLocationEnabled(true);\n      console.log('Location enabled:', position);\n    } else {\n      alert('Location access denied or not available!');\n    }\n  };\n\n  // Trigger manual search\n  const handleManualSearch = () => {\n    setManualSearchTriggered(true);\n    console.log('Manual search triggered');\n  };\n\n  // Handle when the user allows geolocation access\n  useEffect(() => {\n    if (position) {\n      setIsLocationEnabled(true);\n    }\n  }, [position]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [!isLocationEnabled && !manualSearchTriggered && /*#__PURE__*/_jsxDEV(LocationModal, {\n      onEnable: handleEnableLocation,\n      onManualSearch: handleManualSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapPicker, {\n      onLocationSelect: loc => console.log(loc)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddressForm, {\n      onSave: handleSaveAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Saved Addresses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), addresses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addresses.map((address, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [address.category, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 20\n            }, this), \" \", address.houseNo, \", \", address.area]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No addresses saved yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mraqY7zcB3ex9P6KeumawVx36Qo=\", false, function () {\n  return [useGeolocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapPicker","LocationModal","useGeolocation","AddressForm","jsxDEV","_jsxDEV","App","_s","position","error","addresses","setAddresses","isLocationEnabled","setIsLocationEnabled","manualSearchTriggered","setManualSearchTriggered","handleSaveAddress","newAddress","alert","handleEnableLocation","console","log","handleManualSearch","className","children","onEnable","onManualSearch","fileName","_jsxFileName","lineNumber","columnNumber","onLocationSelect","loc","onSave","length","map","address","index","category","houseNo","area","_c","$RefreshReg$"],"sources":["C:/Users/sreyoshi/myproj/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import MapPicker from './components/mapPicker';\n// import LocationModal from './components/locationModal';\n// import useGeolocation from './hooks/useGeolocation';\n\n// const App = () => {\n//   const { position, error } = useGeolocation();\n//   const [showModal, setShowModal] = useState(true);\n//   const [selectedLocation, setSelectedLocation] = useState(null);\n\n//   // Handle enabling location (requesting browser permissions)\n//   const handleEnableLocation = () => {\n//     if (position) {\n//       setSelectedLocation({\n//         lat: position.coords.latitude,\n//         lng: position.coords.longitude,\n//       });\n//       setShowModal(false); // Close the modal once location is granted\n//     } else {\n//       alert('Location permission denied or unavailable.');\n//     }\n//   };\n\n//   // Handle manual search (trigger map or input field for address search)\n//   const handleManualSearch = () => {\n//     setShowModal(false); // Close the modal for manual search\n//   };\n\n//   // Handle the selected location from the map\n//   const handleLocationSelect = (loc) => {\n//     setSelectedLocation(loc);\n//   };\n\n//   return (\n//     <div>\n//       {showModal && <LocationModal onEnable={handleEnableLocation} onManualSearch={handleManualSearch} />}\n//       <MapPicker onLocationSelect={handleLocationSelect} initialLocation={selectedLocation} />\n//       {selectedLocation && (\n//         <div className=\"selected-location\">\n//           <p>Selected Location:</p>\n//           <p>Lat: {selectedLocation.lat}</p>\n//           <p>Lng: {selectedLocation.lng}</p>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\nimport React, { useState, useEffect } from 'react';\nimport MapPicker from './components/mapPicker';\nimport LocationModal from './components/locationModal';\nimport useGeolocation from './hooks/useGeolocation';\nimport AddressForm from './components/addressForm'; // Import AddressForm component\nimport './App.css'; // Ensure App-wide styles are included\n\nconst App = () => {\n  const { position, error } = useGeolocation();\n  const [addresses, setAddresses] = useState([]); // State to hold saved addresses\n  const [isLocationEnabled, setIsLocationEnabled] = useState(false); // Track if location is enabled\n  const [manualSearchTriggered, setManualSearchTriggered] = useState(false); // Track if manual search is triggered\n\n  // Handle saving the address\n  const handleSaveAddress = (newAddress) => {\n    setAddresses([...addresses, newAddress]);\n    alert('Address saved successfully!');\n  };\n\n  // Enable location if geolocation permission is granted\n  const handleEnableLocation = () => {\n    if (position) {\n      setIsLocationEnabled(true);\n      console.log('Location enabled:', position);\n    } else {\n      alert('Location access denied or not available!');\n    }\n  };\n\n  // Trigger manual search\n  const handleManualSearch = () => {\n    setManualSearchTriggered(true);\n    console.log('Manual search triggered');\n  };\n\n  // Handle when the user allows geolocation access\n  useEffect(() => {\n    if (position) {\n      setIsLocationEnabled(true);\n    }\n  }, [position]);\n\n  return (\n    <div className=\"app-container\">\n      {/* Show Location Modal if location is not enabled */}\n      {!isLocationEnabled && !manualSearchTriggered && (\n        <LocationModal onEnable={handleEnableLocation} onManualSearch={handleManualSearch} />\n      )}\n\n      {/* MapPicker to allow user to pick a location */}\n      <MapPicker onLocationSelect={(loc) => console.log(loc)} />\n\n      {/* Address Form for entering and saving addresses */}\n      <AddressForm onSave={handleSaveAddress} />\n\n      {/* Display the saved addresses */}\n      <div className=\"address-list\">\n        <h2>Saved Addresses</h2>\n        {addresses.length > 0 ? (\n          <ul>\n            {addresses.map((address, index) => (\n              <li key={index}>\n                <p><strong>{address.category}:</strong> {address.houseNo}, {address.area}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No addresses saved yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,cAAc,MAAM,wBAAwB;AACnD,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAC;AACpD,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACc,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnE,MAAM,CAACgB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE3E;EACA,MAAMkB,iBAAiB,GAAIC,UAAU,IAAK;IACxCN,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEO,UAAU,CAAC,CAAC;IACxCC,KAAK,CAAC,6BAA6B,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIX,QAAQ,EAAE;MACZK,oBAAoB,CAAC,IAAI,CAAC;MAC1BO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEb,QAAQ,CAAC;IAC5C,CAAC,MAAM;MACLU,KAAK,CAAC,0CAA0C,CAAC;IACnD;EACF,CAAC;;EAED;EACA,MAAMI,kBAAkB,GAAGA,CAAA,KAAM;IAC/BP,wBAAwB,CAAC,IAAI,CAAC;IAC9BK,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACxC,CAAC;;EAED;EACAtB,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,EAAE;MACZK,oBAAoB,CAAC,IAAI,CAAC;IAC5B;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKkB,SAAS,EAAC,eAAe;IAAAC,QAAA,GAE3B,CAACZ,iBAAiB,IAAI,CAACE,qBAAqB,iBAC3CT,OAAA,CAACJ,aAAa;MAACwB,QAAQ,EAAEN,oBAAqB;MAACO,cAAc,EAAEJ;IAAmB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACrF,eAGDzB,OAAA,CAACL,SAAS;MAAC+B,gBAAgB,EAAGC,GAAG,IAAKZ,OAAO,CAACC,GAAG,CAACW,GAAG;IAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG1DzB,OAAA,CAACF,WAAW;MAAC8B,MAAM,EAAEjB;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAG1CzB,OAAA;MAAKkB,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BnB,OAAA;QAAAmB,QAAA,EAAI;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACvBpB,SAAS,CAACwB,MAAM,GAAG,CAAC,gBACnB7B,OAAA;QAAAmB,QAAA,EACGd,SAAS,CAACyB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC5BhC,OAAA;UAAAmB,QAAA,eACEnB,OAAA;YAAAmB,QAAA,gBAAGnB,OAAA;cAAAmB,QAAA,GAASY,OAAO,CAACE,QAAQ,EAAC,GAAC;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACM,OAAO,CAACG,OAAO,EAAC,IAAE,EAACH,OAAO,CAACI,IAAI;UAAA;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADtEO,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELzB,OAAA;QAAAmB,QAAA,EAAG;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC9B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAjEID,GAAG;EAAA,QACqBJ,cAAc;AAAA;AAAAuC,EAAA,GADtCnC,GAAG;AAmET,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}