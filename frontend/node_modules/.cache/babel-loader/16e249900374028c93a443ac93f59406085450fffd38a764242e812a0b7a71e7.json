{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreyoshi\\\\myproj\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport MapPicker from './components/mapPicker';\nimport LocationModal from './components/locationModal';\nimport useGeolocation from './hooks/useGeolocation';\nimport AddressForm from './components/addressForm'; // Import AddressForm component\nimport './App.css'; // Ensure App-wide styles are included\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    position,\n    error\n  } = useGeolocation();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showAddressForm, setShowAddressForm] = useState(false); // Track form visibility\n  const [savedAddresses, setSavedAddresses] = useState([]); // Store saved addresses\n\n  // Handle enabling location (requesting browser permissions)\n  const handleEnableLocation = () => {\n    if (position) {\n      setSelectedLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n      setShowModal(false); // Close the modal once location is granted\n      setShowAddressForm(true); // Show address form after location is granted\n    } else {\n      alert('Location permission denied or unavailable.');\n    }\n  };\n\n  // Handle manual search (trigger map or input field for address search)\n  const handleManualSearch = () => {\n    setShowModal(false); // Close the modal for manual search\n    setShowAddressForm(true); // Show address form after manual search\n  };\n\n  // Handle the selected location from the map\n  const handleLocationSelect = loc => {\n    setSelectedLocation(loc);\n    setShowAddressForm(true); // Show address form after selecting location from map\n  };\n\n  // Handle saving the address form data\n  const handleSaveAddress = addressData => {\n    const newAddress = {\n      ...addressData,\n      location: selectedLocation\n    };\n    setSavedAddresses([...savedAddresses, newAddress]);\n    alert('Address saved successfully!');\n    setShowAddressForm(false); // Close the form after saving\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showModal && /*#__PURE__*/_jsxDEV(LocationModal, {\n      onEnable: handleEnableLocation,\n      onManualSearch: handleManualSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(MapPicker, {\n      onLocationSelect: handleLocationSelect,\n      initialLocation: selectedLocation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), selectedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selected Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lat: \", selectedLocation.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Lng: \", selectedLocation.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), showAddressForm && /*#__PURE__*/_jsxDEV(AddressForm, {\n      onSave: handleSaveAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Saved Addresses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), savedAddresses.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: savedAddresses.map((address, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [address.category, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 20\n            }, this), \" \", address.houseNo, \", \", address.area]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 20\n            }, this), \" Lat: \", address.location.lat, \", Lng: \", address.location.lng]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No addresses saved yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sh2A8Ld6lb2bq35xjLNgB0MFAL8=\", false, function () {\n  return [useGeolocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapPicker","LocationModal","useGeolocation","AddressForm","jsxDEV","_jsxDEV","App","_s","position","error","showModal","setShowModal","selectedLocation","setSelectedLocation","showAddressForm","setShowAddressForm","savedAddresses","setSavedAddresses","handleEnableLocation","lat","coords","latitude","lng","longitude","alert","handleManualSearch","handleLocationSelect","loc","handleSaveAddress","addressData","newAddress","location","children","onEnable","onManualSearch","fileName","_jsxFileName","lineNumber","columnNumber","onLocationSelect","initialLocation","className","onSave","length","map","address","index","category","houseNo","area","_c","$RefreshReg$"],"sources":["C:/Users/sreyoshi/myproj/frontend/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport MapPicker from './components/mapPicker';\nimport LocationModal from './components/locationModal';\nimport useGeolocation from './hooks/useGeolocation';\nimport AddressForm from './components/addressForm'; // Import AddressForm component\nimport './App.css'; // Ensure App-wide styles are included\n\nconst App = () => {\n  const { position, error } = useGeolocation();\n  const [showModal, setShowModal] = useState(true);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [showAddressForm, setShowAddressForm] = useState(false); // Track form visibility\n  const [savedAddresses, setSavedAddresses] = useState([]); // Store saved addresses\n\n  // Handle enabling location (requesting browser permissions)\n  const handleEnableLocation = () => {\n    if (position) {\n      setSelectedLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude,\n      });\n      setShowModal(false); // Close the modal once location is granted\n      setShowAddressForm(true); // Show address form after location is granted\n    } else {\n      alert('Location permission denied or unavailable.');\n    }\n  };\n\n  // Handle manual search (trigger map or input field for address search)\n  const handleManualSearch = () => {\n    setShowModal(false); // Close the modal for manual search\n    setShowAddressForm(true); // Show address form after manual search\n  };\n\n  // Handle the selected location from the map\n  const handleLocationSelect = (loc) => {\n    setSelectedLocation(loc);\n    setShowAddressForm(true); // Show address form after selecting location from map\n  };\n\n  // Handle saving the address form data\n  const handleSaveAddress = (addressData) => {\n    const newAddress = { ...addressData, location: selectedLocation };\n    setSavedAddresses([...savedAddresses, newAddress]);\n    alert('Address saved successfully!');\n    setShowAddressForm(false); // Close the form after saving\n  };\n\n  return (\n    <div>\n      {showModal && <LocationModal onEnable={handleEnableLocation} onManualSearch={handleManualSearch} />}\n      \n      {/* MapPicker to allow user to pick a location */}\n      <MapPicker onLocationSelect={handleLocationSelect} initialLocation={selectedLocation} />\n      \n      {/* Display selected location coordinates */}\n      {selectedLocation && (\n        <div className=\"selected-location\">\n          <p>Selected Location:</p>\n          <p>Lat: {selectedLocation.lat}</p>\n          <p>Lng: {selectedLocation.lng}</p>\n        </div>\n      )}\n\n      {/* Address Form for entering and saving addresses */}\n      {showAddressForm && (\n        <AddressForm onSave={handleSaveAddress} />\n      )}\n\n      {/* Display the saved addresses */}\n      <div className=\"address-list\">\n        <h2>Saved Addresses</h2>\n        {savedAddresses.length > 0 ? (\n          <ul>\n            {savedAddresses.map((address, index) => (\n              <li key={index}>\n                <p><strong>{address.category}:</strong> {address.houseNo}, {address.area}</p>\n                <p><strong>Location:</strong> Lat: {address.location.lat}, Lng: {address.location.lng}</p>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No addresses saved yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}