{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreyoshi\\\\myproj\\\\frontend\\\\src\\\\components\\\\manageAddress.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FaMapMarkerAlt, FaHome, FaBuilding, FaUsers } from 'react-icons/fa'; // Address type and location icons\nimport { GoogleMap, LoadScript, Autocomplete, Marker } from '@react-google-maps/api'; // Import Google Maps components\nimport { FaLocationCrosshairs } from \"react-icons/fa6\";\nimport '../styles/manageAddress.css';\n\n// const ManageAddresses = () => {\n//   const [addresses, setAddresses] = useState([\n//     { id: 1, type: 'Home', address: '123 Home St, Cityville', icon: <FaHome color=\"black\" /> },\n//     { id: 2, type: 'Office', address: '456 Work Rd, Metropolis', icon: <FaBuilding color=\"black\" /> },\n//     { id: 3, type: 'Friends & Family', address: '789 Friend Ave, Townsville', icon: <FaUsers color=\"black\" /> },\n//   ]);\n\n//   const [recentSearches, setRecentSearches] = useState([\n//     { id: 1, type: 'Search 1', address: 'Some Location, City' },\n//     { id: 2, type: 'Search 2', address: 'Another Location, Metropolis' },\n//     { id: 3, type: 'Search 3', address: 'Yet Another Location, Townsville' },\n//   ]);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageAddresses = () => {\n  _s();\n  const [addresses, setAddresses] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    // Fetch saved addresses from the backend\n    const fetchAddresses = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/addresses');\n        if (!response.ok) throw new Error('Failed to fetch addresses');\n        const data = await response.json();\n        setAddresses(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchAddresses();\n  }, []);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedAddress, setSelectedAddress] = useState('');\n  const [manualSearchMode, setManualSearchMode] = useState(false);\n  const handleDelete = id => {\n    setAddresses(addresses.filter(address => address.id !== id));\n  };\n  const handleSearch = e => {\n    setSearchTerm(e.target.value);\n  };\n  const handleSearchManually = () => {\n    setManualSearchMode(true); // Activate manual search mode\n  };\n  const handlePlaceSelect = autocomplete => {\n    const place = autocomplete.getPlace();\n    if (place && place.formatted_address) {\n      setSelectedAddress(place.formatted_address);\n      setManualSearchMode(false); // Close manual search after address is selected\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-addresses\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search your area / pincode / apartment\",\n        value: searchTerm,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-info\",\n        children: [/*#__PURE__*/_jsxDEV(FaLocationCrosshairs, {\n          color: \"red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"current-location\",\n          children: \"Current Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"enable-btn\",\n        children: \"Enable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), manualSearchMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manual-search\",\n      children: /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: {\n            width: '100%',\n            height: '400px'\n          },\n          zoom: 12,\n          center: {\n            lat: 0,\n            lng: 0\n          } // Optional: Center the map\n          ,\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            onLoad: autocomplete => console.log('Autocomplete loaded'),\n            onPlaceChanged: e => handlePlaceSelect(e),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter address\",\n              style: {\n                width: '100%',\n                padding: '10px',\n                fontSize: '16px',\n                borderRadius: '5px',\n                border: '1px solid #ccc'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-location\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Saved Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: addresses.map(address => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"address-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"address-type\",\n              children: [address.icon, /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: address.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address-text\",\n              children: address.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, address.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-searches\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Searches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recentSearches.map(search => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"address-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"address-type\",\n              children: [/*#__PURE__*/_jsxDEV(FaMapMarkerAlt, {\n                color: \"red\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: search.type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"address-text\",\n              children: search.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, search.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ManageAddresses, \"I0d1czimzNSWo7eGRYV0aFbjK7o=\");\n_c = ManageAddresses;\nexport default ManageAddresses;\nvar _c;\n$RefreshReg$(_c, \"ManageAddresses\");","map":{"version":3,"names":["React","useState","FaMapMarkerAlt","FaHome","FaBuilding","FaUsers","GoogleMap","LoadScript","Autocomplete","Marker","FaLocationCrosshairs","jsxDEV","_jsxDEV","ManageAddresses","_s","addresses","setAddresses","isLoading","setIsLoading","error","setError","useEffect","fetchAddresses","response","fetch","ok","Error","data","json","err","message","searchTerm","setSearchTerm","selectedAddress","setSelectedAddress","manualSearchMode","setManualSearchMode","handleDelete","id","filter","address","handleSearch","e","target","value","handleSearchManually","handlePlaceSelect","autocomplete","place","getPlace","formatted_address","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","color","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapContainerStyle","width","height","zoom","center","lat","lng","onLoad","console","log","onPlaceChanged","style","padding","fontSize","borderRadius","border","map","icon","recentSearches","search","_c","$RefreshReg$"],"sources":["C:/Users/sreyoshi/myproj/frontend/src/components/manageAddress.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { FaMapMarkerAlt, FaHome, FaBuilding, FaUsers } from 'react-icons/fa'; // Address type and location icons\r\nimport { GoogleMap, LoadScript, Autocomplete, Marker } from '@react-google-maps/api'; // Import Google Maps components\r\nimport { FaLocationCrosshairs } from \"react-icons/fa6\";\r\nimport '../styles/manageAddress.css';\r\n\r\n// const ManageAddresses = () => {\r\n//   const [addresses, setAddresses] = useState([\r\n//     { id: 1, type: 'Home', address: '123 Home St, Cityville', icon: <FaHome color=\"black\" /> },\r\n//     { id: 2, type: 'Office', address: '456 Work Rd, Metropolis', icon: <FaBuilding color=\"black\" /> },\r\n//     { id: 3, type: 'Friends & Family', address: '789 Friend Ave, Townsville', icon: <FaUsers color=\"black\" /> },\r\n//   ]);\r\n\r\n//   const [recentSearches, setRecentSearches] = useState([\r\n//     { id: 1, type: 'Search 1', address: 'Some Location, City' },\r\n//     { id: 2, type: 'Search 2', address: 'Another Location, Metropolis' },\r\n//     { id: 3, type: 'Search 3', address: 'Yet Another Location, Townsville' },\r\n//   ]);\r\n\r\n\r\nconst ManageAddresses = () => {\r\n  const [addresses, setAddresses] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch saved addresses from the backend\r\n    const fetchAddresses = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/addresses');\r\n        if (!response.ok) throw new Error('Failed to fetch addresses');\r\n        const data = await response.json();\r\n        setAddresses(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAddresses();\r\n  }, []);\r\n  \r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedAddress, setSelectedAddress] = useState('');\r\n  const [manualSearchMode, setManualSearchMode] = useState(false);\r\n\r\n  const handleDelete = (id) => {\r\n    setAddresses(addresses.filter((address) => address.id !== id));\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleSearchManually = () => {\r\n    setManualSearchMode(true); // Activate manual search mode\r\n  };\r\n\r\n  const handlePlaceSelect = (autocomplete) => {\r\n    const place = autocomplete.getPlace();\r\n    if (place && place.formatted_address) {\r\n      setSelectedAddress(place.formatted_address);\r\n      setManualSearchMode(false); // Close manual search after address is selected\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"manage-addresses\">\r\n      {/* Search Bar Section */}\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search your area / pincode / apartment\"\r\n          value={searchTerm}\r\n          onChange={handleSearch}\r\n        />\r\n      </div>\r\n\r\n      {/* Current Location and Enable Button */}\r\n      <div className=\"location-section\">\r\n        <div className=\"location-info\">\r\n          <FaLocationCrosshairs color=\"red\" />\r\n          <span className=\"current-location\">Current Location</span>\r\n        </div>\r\n        <button className=\"enable-btn\">Enable</button>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n\r\n      {/* Manual Search Section */}\r\n      {manualSearchMode && (\r\n        <div className=\"manual-search\">\r\n          <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY}>\r\n            <GoogleMap\r\n              mapContainerStyle={{ width: '100%', height: '400px' }}\r\n              zoom={12}\r\n              center={{ lat: 0, lng: 0 }} // Optional: Center the map\r\n            >\r\n              <Autocomplete\r\n                onLoad={(autocomplete) => console.log('Autocomplete loaded')}\r\n                onPlaceChanged={(e) => handlePlaceSelect(e)}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter address\"\r\n                  style={{\r\n                    width: '100%',\r\n                    padding: '10px',\r\n                    fontSize: '16px',\r\n                    borderRadius: '5px',\r\n                    border: '1px solid #ccc',\r\n                  }}\r\n                />\r\n              </Autocomplete>\r\n            </GoogleMap>\r\n          </LoadScript>\r\n        </div>\r\n      )}\r\n\r\n      {/* Saved Location Section */}\r\n      <div className=\"saved-location\">\r\n        <h3>Saved Location</h3>\r\n        <ul>\r\n          {addresses.map((address) => (\r\n            <li key={address.id} className=\"address-item\">\r\n              <div className=\"address-info\">\r\n                <div className=\"address-type\">\r\n                  {address.icon}\r\n                  <strong>{address.type}</strong>\r\n                </div>\r\n                <p className=\"address-text\">{address.address}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n\r\n      {/* Recent Searches Section */}\r\n      <div className=\"recent-searches\">\r\n        <h3>Recent Searches</h3>\r\n        <ul>\r\n          {recentSearches.map((search) => (\r\n            <li key={search.id} className=\"address-item\">\r\n              <div className=\"address-info\">\r\n                <div className=\"address-type\">\r\n                  <FaMapMarkerAlt color=\"red\" />\r\n                  <strong>{search.type}</strong>\r\n                </div>\r\n                <p className=\"address-text\">{search.address}</p>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"underline\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageAddresses;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}